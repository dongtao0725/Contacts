<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dongt.dao.UserDao">
    <resultMap id="UserResult" type="User">
        <id property="id" column="id"/>
        <result property="username" column="username"/>
        <result property="password" column="password"/>
        <association property="role" javaType="Management_Role">
            <id property="role_id" column="role_id"/>
            <result property="role_name" column="role_name"/>
        </association>
    </resultMap>

    <select id="login" parameterType="User" resultMap="UserResult">
        select U.id,U.username,U.password,R.role_id,R.role_name FROM Management_User U,Management_Role R where U.username=#{username} and U.password=#{password} and U.role_id=R.role_id
    </select>

    <select id="findUsers" parameterType="Map" resultMap="UserResult">
        SELECT  U.id,U.username,U.password,R.role_id,R.role_name FROM Management_User U,Management_Role R where U.role_id=R.role_id
        <if test="username!=null and username!=''">
            and U.username like #{username}
        </if>
    </select>

    <select id="getCount" parameterType="Map" resultType="Integer">
        select count(*) from Management_User
        <where>
            <if test="username!=null and username!='' ">
                username like #{username}
            </if>
        </where>
    </select>

    <insert id="addUser" useGeneratedKeys="true" keyProperty="id" parameterType="User">
        insert into Management_User(username,password,role_id)
        values(#{username},#{password},#{role.role_id})
    </insert>

    <!-- 修改管理员 -->
    <update id="updateUser" parameterType="User">
        update Management_User set
        <choose>
            <when test="password!=null and password!=''">
              username=#{username},password=#{password},role_id=#{role.role_id} where id=#{id}
            </when>
            <otherwise>
                username=#{username},role_id=#{role.role_id} where id=#{id}
            </otherwise>
        </choose>
    </update>

    <!-- 删除管理员 -->
    <delete id="deleteUser" parameterType="Integer">
        delete from Management_User where
        id=#{id}
    </delete>
</mapper>